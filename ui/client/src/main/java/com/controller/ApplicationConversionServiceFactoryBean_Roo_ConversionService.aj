// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.controller;

import com.equisettle.common.domain.Client;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Client, String> ApplicationConversionServiceFactoryBean.getClientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.equisettle.common.domain.Client, java.lang.String>() {
            public String convert(Client client) {
                return new StringBuilder().append(client.getFirstName()).append(' ').append(client.getLastName()).append(' ').append(client.getEmail()).append(' ').append(client.getAddress()).toString();
            }
        };
    }
    
    public Converter<Integer, Client> ApplicationConversionServiceFactoryBean.getIdToClientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.equisettle.common.domain.Client>() {
            public com.equisettle.common.domain.Client convert(java.lang.Integer id) {
                return Client.findClient(id);
            }
        };
    }
    
    public Converter<String, Client> ApplicationConversionServiceFactoryBean.getStringToClientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.equisettle.common.domain.Client>() {
            public com.equisettle.common.domain.Client convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Client.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getClientToStringConverter());
        registry.addConverter(getIdToClientConverter());
        registry.addConverter(getStringToClientConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
